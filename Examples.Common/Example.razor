<h1>Code Mirror 6 demo</h1>

<CodeMirror6Wrapper
    @bind-Text=@Text
    TabSize=@TabSize
/>
<hr />
Result:
<pre>@Text</pre>
<hr />

<label for="#tabSizeInput">TabSize:</label>
<input id="tabSizeInput" @bind-value=TabSize />
@TabSize

<hr />
<button
    @onclick=@(async () => {
        Text = code.Replace("\r", "");
        await InvokeAsync(StateHasChanged);
    })
>Reset text</button>


<CodeMirror6Wrapper
    @bind-Text=@Text2
/>
<hr />
Result:
<pre>@Text2</pre>
<hr />

<CodeMirror6Wrapper
    @bind-Text=@Text3
    PlaceholderText="Enter some text"
/>
<hr />
Result:
<pre>@Text3</pre>
<hr />



@code {
    private const string code = @"## Title

```jsx
function Demo() {
  return <div>demo</div>
}
```

```bash
# Not dependent on uiw.
npm install @codemirror/lang-markdown --save
npm install @codemirror/language-data --save
```

[website ulr](https://github.com/gaelj/BlazorCodeMirror6)

```go
package main
import ""fmt""
func main() {
  fmt.Println(""Hello, 世界"")
}
```
";
    private string? Text = code;
    private string? Text2 = "# Example 2";
    private string? Text3;
    private int TabSize = 4;
}
